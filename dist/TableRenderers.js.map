{"version":3,"file":"TableRenderers.js","names":["_react","_interopRequireDefault","require","_propTypes","_Utilities","e","__esModule","_classCallCheck","a","n","TypeError","_defineProperties","r","t","length","o","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","prototype","i","_toPrimitive","_typeof","Symbol","toPrimitive","call","String","Number","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","constructor","apply","_assertThisInitialized","ReferenceError","Boolean","valueOf","setPrototypeOf","getPrototypeOf","bind","__proto__","_inherits","create","value","_setPrototypeOf","spanSize","arr","j","x","asc","end","noDraw","len","asc1","end1","stop","redColorScaleGenerator","values","min","Math","max","nonRed","round","backgroundColor","concat","makeRenderer","opts","arguments","undefined","TableRenderer","_React$PureComponent","render","_this","pivotData","PivotData","props","colAttrs","cols","rowAttrs","rows","rowKeys","getRowKeys","colKeys","getColKeys","grandTotalAggregator","getAggregator","valueCellColors","rowTotalColors","colTotalColors","heatmapMode","colorScaleGenerator","tableColorScaleGenerator","rowTotalValues","map","colTotalValues","allValues","c","push","colorScale","v","rowColorScales","rowValues","colColorScales","colValues","getClickHandler","tableOptions","clickCallback","filters","_i","_Object$keys","keys","attr","_i2","_Object$keys2","createElement","className","colSpan","rowSpan","colKey","rowKey","totalAggregator","txt","aggregator","onClick","style","format","React","PureComponent","defaultProps","propTypes","PropTypes","func","object","TSVExportRenderer","_React$PureComponent2","headerRow","aggregatorName","join","result","row","unshift","width","window","innerWidth","height","innerHeight","readOnly","_default","exports","Table"],"sources":["../src/TableRenderers.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {PivotData} from './Utilities';\n\n// helper function for setting row/col-span in pivotTableRenderer\nconst spanSize = function(arr, i, j) {\n  let x;\n  if (i !== 0) {\n    let asc, end;\n    let noDraw = true;\n    for (\n      x = 0, end = j, asc = end >= 0;\n      asc ? x <= end : x >= end;\n      asc ? x++ : x--\n    ) {\n      if (arr[i - 1][x] !== arr[i][x]) {\n        noDraw = false;\n      }\n    }\n    if (noDraw) {\n      return -1;\n    }\n  }\n  let len = 0;\n  while (i + len < arr.length) {\n    let asc1, end1;\n    let stop = false;\n    for (\n      x = 0, end1 = j, asc1 = end1 >= 0;\n      asc1 ? x <= end1 : x >= end1;\n      asc1 ? x++ : x--\n    ) {\n      if (arr[i][x] !== arr[i + len][x]) {\n        stop = true;\n      }\n    }\n    if (stop) {\n      break;\n    }\n    len++;\n  }\n  return len;\n};\n\nfunction redColorScaleGenerator(values) {\n  const min = Math.min.apply(Math, values);\n  const max = Math.max.apply(Math, values);\n  return x => {\n    // eslint-disable-next-line no-magic-numbers\n    const nonRed = 255 - Math.round((255 * (x - min)) / (max - min));\n    return {backgroundColor: `rgb(255,${nonRed},${nonRed})`};\n  };\n}\n\nfunction makeRenderer(opts = {}) {\n  class TableRenderer extends React.PureComponent {\n    render() {\n      const pivotData = new PivotData(this.props);\n      const colAttrs = pivotData.props.cols;\n      const rowAttrs = pivotData.props.rows;\n      const rowKeys = pivotData.getRowKeys();\n      const colKeys = pivotData.getColKeys();\n      const grandTotalAggregator = pivotData.getAggregator([], []);\n\n      let valueCellColors = () => {};\n      let rowTotalColors = () => {};\n      let colTotalColors = () => {};\n      if (opts.heatmapMode) {\n        const colorScaleGenerator = this.props.tableColorScaleGenerator;\n        const rowTotalValues = colKeys.map(x =>\n          pivotData.getAggregator([], x).value()\n        );\n        rowTotalColors = colorScaleGenerator(rowTotalValues);\n        const colTotalValues = rowKeys.map(x =>\n          pivotData.getAggregator(x, []).value()\n        );\n        colTotalColors = colorScaleGenerator(colTotalValues);\n\n        if (opts.heatmapMode === 'full') {\n          const allValues = [];\n          rowKeys.map(r =>\n            colKeys.map(c =>\n              allValues.push(pivotData.getAggregator(r, c).value())\n            )\n          );\n          const colorScale = colorScaleGenerator(allValues);\n          valueCellColors = (r, c, v) => colorScale(v);\n        } else if (opts.heatmapMode === 'row') {\n          const rowColorScales = {};\n          rowKeys.map(r => {\n            const rowValues = colKeys.map(x =>\n              pivotData.getAggregator(r, x).value()\n            );\n            rowColorScales[r] = colorScaleGenerator(rowValues);\n          });\n          valueCellColors = (r, c, v) => rowColorScales[r](v);\n        } else if (opts.heatmapMode === 'col') {\n          const colColorScales = {};\n          colKeys.map(c => {\n            const colValues = rowKeys.map(x =>\n              pivotData.getAggregator(x, c).value()\n            );\n            colColorScales[c] = colorScaleGenerator(colValues);\n          });\n          valueCellColors = (r, c, v) => colColorScales[c](v);\n        }\n      }\n\n      const getClickHandler =\n        this.props.tableOptions && this.props.tableOptions.clickCallback\n          ? (value, rowValues, colValues) => {\n              const filters = {};\n              for (const i of Object.keys(colAttrs || {})) {\n                const attr = colAttrs[i];\n                if (colValues[i] !== null) {\n                  filters[attr] = colValues[i];\n                }\n              }\n              for (const i of Object.keys(rowAttrs || {})) {\n                const attr = rowAttrs[i];\n                if (rowValues[i] !== null) {\n                  filters[attr] = rowValues[i];\n                }\n              }\n              return e =>\n                this.props.tableOptions.clickCallback(\n                  e,\n                  value,\n                  filters,\n                  pivotData\n                );\n            }\n          : null;\n\n      return (\n        <table className=\"pvtTable\">\n          <thead>\n            {colAttrs.map(function(c, j) {\n              return (\n                <tr key={`colAttr${j}`}>\n                  {j === 0 && rowAttrs.length !== 0 && (\n                    <th colSpan={rowAttrs.length} rowSpan={colAttrs.length} />\n                  )}\n                  <th className=\"pvtAxisLabel\">{c}</th>\n                  {colKeys.map(function(colKey, i) {\n                    const x = spanSize(colKeys, i, j);\n                    if (x === -1) {\n                      return null;\n                    }\n                    return (\n                      <th\n                        className=\"pvtColLabel\"\n                        key={`colKey${i}`}\n                        colSpan={x}\n                        rowSpan={\n                          j === colAttrs.length - 1 && rowAttrs.length !== 0\n                            ? 2\n                            : 1\n                        }\n                      >\n                        {colKey[j]}\n                      </th>\n                    );\n                  })}\n\n                  {j === 0 && (\n                    <th\n                      className=\"pvtTotalLabel\"\n                      rowSpan={\n                        colAttrs.length + (rowAttrs.length === 0 ? 0 : 1)\n                      }\n                    >\n                      Totals\n                    </th>\n                  )}\n                </tr>\n              );\n            })}\n\n            {rowAttrs.length !== 0 && (\n              <tr>\n                {rowAttrs.map(function(r, i) {\n                  return (\n                    <th className=\"pvtAxisLabel\" key={`rowAttr${i}`}>\n                      {r}\n                    </th>\n                  );\n                })}\n                <th className=\"pvtTotalLabel\">\n                  {colAttrs.length === 0 ? 'Totals' : null}\n                </th>\n              </tr>\n            )}\n          </thead>\n\n          <tbody>\n            {rowKeys.map(function(rowKey, i) {\n              const totalAggregator = pivotData.getAggregator(rowKey, []);\n              return (\n                <tr key={`rowKeyRow${i}`}>\n                  {rowKey.map(function(txt, j) {\n                    const x = spanSize(rowKeys, i, j);\n                    if (x === -1) {\n                      return null;\n                    }\n                    return (\n                      <th\n                        key={`rowKeyLabel${i}-${j}`}\n                        className=\"pvtRowLabel\"\n                        rowSpan={x}\n                        colSpan={\n                          j === rowAttrs.length - 1 && colAttrs.length !== 0\n                            ? 2\n                            : 1\n                        }\n                      >\n                        {txt}\n                      </th>\n                    );\n                  })}\n                  {colKeys.map(function(colKey, j) {\n                    const aggregator = pivotData.getAggregator(rowKey, colKey);\n                    return (\n                      <td\n                        className=\"pvtVal\"\n                        key={`pvtVal${i}-${j}`}\n                        onClick={\n                          getClickHandler &&\n                          getClickHandler(aggregator.value(), rowKey, colKey)\n                        }\n                        style={valueCellColors(\n                          rowKey,\n                          colKey,\n                          aggregator.value()\n                        )}\n                      >\n                        {aggregator.format(aggregator.value())}\n                      </td>\n                    );\n                  })}\n                  <td\n                    className=\"pvtTotal\"\n                    onClick={\n                      getClickHandler &&\n                      getClickHandler(totalAggregator.value(), rowKey, [null])\n                    }\n                    style={colTotalColors(totalAggregator.value())}\n                  >\n                    {totalAggregator.format(totalAggregator.value())}\n                  </td>\n                </tr>\n              );\n            })}\n\n            <tr>\n              <th\n                className=\"pvtTotalLabel\"\n                colSpan={rowAttrs.length + (colAttrs.length === 0 ? 0 : 1)}\n              >\n                Totals\n              </th>\n\n              {colKeys.map(function(colKey, i) {\n                const totalAggregator = pivotData.getAggregator([], colKey);\n                return (\n                  <td\n                    className=\"pvtTotal\"\n                    key={`total${i}`}\n                    onClick={\n                      getClickHandler &&\n                      getClickHandler(totalAggregator.value(), [null], colKey)\n                    }\n                    style={rowTotalColors(totalAggregator.value())}\n                  >\n                    {totalAggregator.format(totalAggregator.value())}\n                  </td>\n                );\n              })}\n\n              <td\n                onClick={\n                  getClickHandler &&\n                  getClickHandler(grandTotalAggregator.value(), [null], [null])\n                }\n                className=\"pvtGrandTotal\"\n              >\n                {grandTotalAggregator.format(grandTotalAggregator.value())}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      );\n    }\n  }\n\n  TableRenderer.defaultProps = PivotData.defaultProps;\n  TableRenderer.propTypes = PivotData.propTypes;\n  TableRenderer.defaultProps.tableColorScaleGenerator = redColorScaleGenerator;\n  TableRenderer.defaultProps.tableOptions = {};\n  TableRenderer.propTypes.tableColorScaleGenerator = PropTypes.func;\n  TableRenderer.propTypes.tableOptions = PropTypes.object;\n  return TableRenderer;\n}\n\nclass TSVExportRenderer extends React.PureComponent {\n  render() {\n    const pivotData = new PivotData(this.props);\n    const rowKeys = pivotData.getRowKeys();\n    const colKeys = pivotData.getColKeys();\n    if (rowKeys.length === 0) {\n      rowKeys.push([]);\n    }\n    if (colKeys.length === 0) {\n      colKeys.push([]);\n    }\n\n    const headerRow = pivotData.props.rows.map(r => r);\n    if (colKeys.length === 1 && colKeys[0].length === 0) {\n      headerRow.push(this.props.aggregatorName);\n    } else {\n      colKeys.map(c => headerRow.push(c.join('-')));\n    }\n\n    const result = rowKeys.map(r => {\n      const row = r.map(x => x);\n      colKeys.map(c => {\n        const v = pivotData.getAggregator(r, c).value();\n        row.push(v ? v : '');\n      });\n      return row;\n    });\n\n    result.unshift(headerRow);\n\n    return (\n      <textarea\n        value={result.map(r => r.join('\\t')).join('\\n')}\n        style={{width: window.innerWidth / 2, height: window.innerHeight / 2}}\n        readOnly={true}\n      />\n    );\n  }\n}\n\nTSVExportRenderer.defaultProps = PivotData.defaultProps;\nTSVExportRenderer.propTypes = PivotData.propTypes;\n\nexport default {\n  Table: makeRenderer(),\n  'Table Heatmap': makeRenderer({heatmapMode: 'full'}),\n  'Table Col Heatmap': makeRenderer({heatmapMode: 'col'}),\n  'Table Row Heatmap': makeRenderer({heatmapMode: 'row'}),\n  'Exportable TSV': TSVExportRenderer,\n};\n"],"mappings":";;;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,UAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,UAAA,GAAAF,OAAA;AAAsC,SAAAD,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,gBAAAA,CAAA;AAAA,SAAAE,gBAAAC,CAAA,EAAAC,CAAA,UAAAD,CAAA,YAAAC,CAAA,aAAAC,SAAA;AAAA,SAAAC,kBAAAN,CAAA,EAAAO,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,CAAAE,MAAA,EAAAD,CAAA,UAAAE,CAAA,GAAAH,CAAA,CAAAC,CAAA,GAAAE,CAAA,CAAAC,UAAA,GAAAD,CAAA,CAAAC,UAAA,QAAAD,CAAA,CAAAE,YAAA,kBAAAF,CAAA,KAAAA,CAAA,CAAAG,QAAA,QAAAC,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAgB,cAAA,CAAAN,CAAA,CAAAO,GAAA,GAAAP,CAAA;AAAA,SAAAQ,aAAAlB,CAAA,EAAAO,CAAA,EAAAC,CAAA,WAAAD,CAAA,IAAAD,iBAAA,CAAAN,CAAA,CAAAmB,SAAA,EAAAZ,CAAA,GAAAC,CAAA,IAAAF,iBAAA,CAAAN,CAAA,EAAAQ,CAAA,GAAAM,MAAA,CAAAC,cAAA,CAAAf,CAAA,iBAAAa,QAAA,SAAAb,CAAA;AAAA,SAAAgB,eAAAR,CAAA,QAAAY,CAAA,GAAAC,YAAA,CAAAb,CAAA,gCAAAc,OAAA,CAAAF,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAC,aAAAb,CAAA,EAAAD,CAAA,oBAAAe,OAAA,CAAAd,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAR,CAAA,GAAAQ,CAAA,CAAAe,MAAA,CAAAC,WAAA,kBAAAxB,CAAA,QAAAoB,CAAA,GAAApB,CAAA,CAAAyB,IAAA,CAAAjB,CAAA,EAAAD,CAAA,gCAAAe,OAAA,CAAAF,CAAA,UAAAA,CAAA,YAAAf,SAAA,yEAAAE,CAAA,GAAAmB,MAAA,GAAAC,MAAA,EAAAnB,CAAA;AAAA,SAAAoB,WAAApB,CAAA,EAAAE,CAAA,EAAAV,CAAA,WAAAU,CAAA,GAAAmB,eAAA,CAAAnB,CAAA,GAAAoB,0BAAA,CAAAtB,CAAA,EAAAuB,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAAvB,CAAA,EAAAV,CAAA,QAAA6B,eAAA,CAAArB,CAAA,EAAA0B,WAAA,IAAAxB,CAAA,CAAAyB,KAAA,CAAA3B,CAAA,EAAAR,CAAA;AAAA,SAAA8B,2BAAAtB,CAAA,EAAAR,CAAA,QAAAA,CAAA,iBAAAsB,OAAA,CAAAtB,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAK,SAAA,qEAAA+B,sBAAA,CAAA5B,CAAA;AAAA,SAAA4B,uBAAApC,CAAA,mBAAAA,CAAA,YAAAqC,cAAA,sEAAArC,CAAA;AAAA,SAAA+B,0BAAA,cAAAvB,CAAA,IAAA8B,OAAA,CAAAnB,SAAA,CAAAoB,OAAA,CAAAd,IAAA,CAAAO,OAAA,CAAAC,SAAA,CAAAK,OAAA,iCAAA9B,CAAA,aAAAuB,yBAAA,YAAAA,0BAAA,aAAAvB,CAAA;AAAA,SAAAqB,gBAAArB,CAAA,WAAAqB,eAAA,GAAAf,MAAA,CAAA0B,cAAA,GAAA1B,MAAA,CAAA2B,cAAA,CAAAC,IAAA,eAAAlC,CAAA,WAAAA,CAAA,CAAAmC,SAAA,IAAA7B,MAAA,CAAA2B,cAAA,CAAAjC,CAAA,MAAAqB,eAAA,CAAArB,CAAA;AAAA,SAAAoC,UAAApC,CAAA,EAAAR,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAK,SAAA,wDAAAG,CAAA,CAAAW,SAAA,GAAAL,MAAA,CAAA+B,MAAA,CAAA7C,CAAA,IAAAA,CAAA,CAAAmB,SAAA,IAAAe,WAAA,IAAAY,KAAA,EAAAtC,CAAA,EAAAK,QAAA,MAAAD,YAAA,WAAAE,MAAA,CAAAC,cAAA,CAAAP,CAAA,iBAAAK,QAAA,SAAAb,CAAA,IAAA+C,eAAA,CAAAvC,CAAA,EAAAR,CAAA;AAAA,SAAA+C,gBAAAvC,CAAA,EAAAR,CAAA,WAAA+C,eAAA,GAAAjC,MAAA,CAAA0B,cAAA,GAAA1B,MAAA,CAAA0B,cAAA,CAAAE,IAAA,eAAAlC,CAAA,EAAAR,CAAA,WAAAQ,CAAA,CAAAmC,SAAA,GAAA3C,CAAA,EAAAQ,CAAA,KAAAuC,eAAA,CAAAvC,CAAA,EAAAR,CAAA;AAEtC;AACA,IAAMgD,QAAQ,GAAG,SAAXA,QAAQA,CAAYC,GAAG,EAAE7B,CAAC,EAAE8B,CAAC,EAAE;EACnC,IAAIC,CAAC;EACL,IAAI/B,CAAC,KAAK,CAAC,EAAE;IACX,IAAIgC,GAAG,EAAEC,GAAG;IACZ,IAAIC,MAAM,GAAG,IAAI;IACjB,KACEH,CAAC,GAAG,CAAC,EAAEE,GAAG,GAAGH,CAAC,EAAEE,GAAG,GAAGC,GAAG,IAAI,CAAC,EAC9BD,GAAG,GAAGD,CAAC,IAAIE,GAAG,GAAGF,CAAC,IAAIE,GAAG,EACzBD,GAAG,GAAGD,CAAC,EAAE,GAAGA,CAAC,EAAE,EACf;MACA,IAAIF,GAAG,CAAC7B,CAAC,GAAG,CAAC,CAAC,CAAC+B,CAAC,CAAC,KAAKF,GAAG,CAAC7B,CAAC,CAAC,CAAC+B,CAAC,CAAC,EAAE;QAC/BG,MAAM,GAAG,KAAK;MAChB;IACF;IACA,IAAIA,MAAM,EAAE;MACV,OAAO,CAAC,CAAC;IACX;EACF;EACA,IAAIC,GAAG,GAAG,CAAC;EACX,OAAOnC,CAAC,GAAGmC,GAAG,GAAGN,GAAG,CAACxC,MAAM,EAAE;IAC3B,IAAI+C,IAAI;MAAEC,IAAI;IACd,IAAIC,IAAI,GAAG,KAAK;IAChB,KACEP,CAAC,GAAG,CAAC,EAAEM,IAAI,GAAGP,CAAC,EAAEM,IAAI,GAAGC,IAAI,IAAI,CAAC,EACjCD,IAAI,GAAGL,CAAC,IAAIM,IAAI,GAAGN,CAAC,IAAIM,IAAI,EAC5BD,IAAI,GAAGL,CAAC,EAAE,GAAGA,CAAC,EAAE,EAChB;MACA,IAAIF,GAAG,CAAC7B,CAAC,CAAC,CAAC+B,CAAC,CAAC,KAAKF,GAAG,CAAC7B,CAAC,GAAGmC,GAAG,CAAC,CAACJ,CAAC,CAAC,EAAE;QACjCO,IAAI,GAAG,IAAI;MACb;IACF;IACA,IAAIA,IAAI,EAAE;MACR;IACF;IACAH,GAAG,EAAE;EACP;EACA,OAAOA,GAAG;AACZ,CAAC;AAED,SAASI,sBAAsBA,CAACC,MAAM,EAAE;EACtC,IAAMC,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC1B,KAAK,CAAC2B,IAAI,EAAEF,MAAM,CAAC;EACxC,IAAMG,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC5B,KAAK,CAAC2B,IAAI,EAAEF,MAAM,CAAC;EACxC,OAAO,UAAAT,CAAC,EAAI;IACV;IACA,IAAMa,MAAM,GAAG,GAAG,GAAGF,IAAI,CAACG,KAAK,CAAE,GAAG,IAAId,CAAC,GAAGU,GAAG,CAAC,IAAKE,GAAG,GAAGF,GAAG,CAAC,CAAC;IAChE,OAAO;MAACK,eAAe,aAAAC,MAAA,CAAaH,MAAM,OAAAG,MAAA,CAAIH,MAAM;IAAG,CAAC;EAC1D,CAAC;AACH;AAEA,SAASI,YAAYA,CAAA,EAAY;EAAA,IAAXC,IAAI,GAAAC,SAAA,CAAA7D,MAAA,QAAA6D,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,CAAC,CAAC;EAAA,IACvBE,aAAa,0BAAAC,oBAAA;IAAA,SAAAD,cAAA;MAAAtE,eAAA,OAAAsE,aAAA;MAAA,OAAA5C,UAAA,OAAA4C,aAAA,EAAAF,SAAA;IAAA;IAAA1B,SAAA,CAAA4B,aAAA,EAAAC,oBAAA;IAAA,OAAAvD,YAAA,CAAAsD,aAAA;MAAAvD,GAAA;MAAA6B,KAAA,EACjB,SAAA4B,MAAMA,CAAA,EAAG;QAAA,IAAAC,KAAA;QACP,IAAMC,SAAS,GAAG,IAAIC,oBAAS,CAAC,IAAI,CAACC,KAAK,CAAC;QAC3C,IAAMC,QAAQ,GAAGH,SAAS,CAACE,KAAK,CAACE,IAAI;QACrC,IAAMC,QAAQ,GAAGL,SAAS,CAACE,KAAK,CAACI,IAAI;QACrC,IAAMC,OAAO,GAAGP,SAAS,CAACQ,UAAU,CAAC,CAAC;QACtC,IAAMC,OAAO,GAAGT,SAAS,CAACU,UAAU,CAAC,CAAC;QACtC,IAAMC,oBAAoB,GAAGX,SAAS,CAACY,aAAa,CAAC,EAAE,EAAE,EAAE,CAAC;QAE5D,IAAIC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS,CAAC,CAAC;QAC9B,IAAIC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS,CAAC,CAAC;QAC7B,IAAIC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS,CAAC,CAAC;QAC7B,IAAItB,IAAI,CAACuB,WAAW,EAAE;UACpB,IAAMC,mBAAmB,GAAG,IAAI,CAACf,KAAK,CAACgB,wBAAwB;UAC/D,IAAMC,cAAc,GAAGV,OAAO,CAACW,GAAG,CAAC,UAAA7C,CAAC;YAAA,OAClCyB,SAAS,CAACY,aAAa,CAAC,EAAE,EAAErC,CAAC,CAAC,CAACL,KAAK,CAAC,CAAC;UAAA,CACxC,CAAC;UACD4C,cAAc,GAAGG,mBAAmB,CAACE,cAAc,CAAC;UACpD,IAAME,cAAc,GAAGd,OAAO,CAACa,GAAG,CAAC,UAAA7C,CAAC;YAAA,OAClCyB,SAAS,CAACY,aAAa,CAACrC,CAAC,EAAE,EAAE,CAAC,CAACL,KAAK,CAAC,CAAC;UAAA,CACxC,CAAC;UACD6C,cAAc,GAAGE,mBAAmB,CAACI,cAAc,CAAC;UAEpD,IAAI5B,IAAI,CAACuB,WAAW,KAAK,MAAM,EAAE;YAC/B,IAAMM,SAAS,GAAG,EAAE;YACpBf,OAAO,CAACa,GAAG,CAAC,UAAAzF,CAAC;cAAA,OACX8E,OAAO,CAACW,GAAG,CAAC,UAAAG,CAAC;gBAAA,OACXD,SAAS,CAACE,IAAI,CAACxB,SAAS,CAACY,aAAa,CAACjF,CAAC,EAAE4F,CAAC,CAAC,CAACrD,KAAK,CAAC,CAAC,CAAC;cAAA,CACvD,CAAC;YAAA,CACH,CAAC;YACD,IAAMuD,UAAU,GAAGR,mBAAmB,CAACK,SAAS,CAAC;YACjDT,eAAe,GAAG,SAAlBA,eAAeA,CAAIlF,CAAC,EAAE4F,CAAC,EAAEG,CAAC;cAAA,OAAKD,UAAU,CAACC,CAAC,CAAC;YAAA;UAC9C,CAAC,MAAM,IAAIjC,IAAI,CAACuB,WAAW,KAAK,KAAK,EAAE;YACrC,IAAMW,cAAc,GAAG,CAAC,CAAC;YACzBpB,OAAO,CAACa,GAAG,CAAC,UAAAzF,CAAC,EAAI;cACf,IAAMiG,SAAS,GAAGnB,OAAO,CAACW,GAAG,CAAC,UAAA7C,CAAC;gBAAA,OAC7ByB,SAAS,CAACY,aAAa,CAACjF,CAAC,EAAE4C,CAAC,CAAC,CAACL,KAAK,CAAC,CAAC;cAAA,CACvC,CAAC;cACDyD,cAAc,CAAChG,CAAC,CAAC,GAAGsF,mBAAmB,CAACW,SAAS,CAAC;YACpD,CAAC,CAAC;YACFf,eAAe,GAAG,SAAlBA,eAAeA,CAAIlF,CAAC,EAAE4F,CAAC,EAAEG,CAAC;cAAA,OAAKC,cAAc,CAAChG,CAAC,CAAC,CAAC+F,CAAC,CAAC;YAAA;UACrD,CAAC,MAAM,IAAIjC,IAAI,CAACuB,WAAW,KAAK,KAAK,EAAE;YACrC,IAAMa,cAAc,GAAG,CAAC,CAAC;YACzBpB,OAAO,CAACW,GAAG,CAAC,UAAAG,CAAC,EAAI;cACf,IAAMO,SAAS,GAAGvB,OAAO,CAACa,GAAG,CAAC,UAAA7C,CAAC;gBAAA,OAC7ByB,SAAS,CAACY,aAAa,CAACrC,CAAC,EAAEgD,CAAC,CAAC,CAACrD,KAAK,CAAC,CAAC;cAAA,CACvC,CAAC;cACD2D,cAAc,CAACN,CAAC,CAAC,GAAGN,mBAAmB,CAACa,SAAS,CAAC;YACpD,CAAC,CAAC;YACFjB,eAAe,GAAG,SAAlBA,eAAeA,CAAIlF,CAAC,EAAE4F,CAAC,EAAEG,CAAC;cAAA,OAAKG,cAAc,CAACN,CAAC,CAAC,CAACG,CAAC,CAAC;YAAA;UACrD;QACF;QAEA,IAAMK,eAAe,GACnB,IAAI,CAAC7B,KAAK,CAAC8B,YAAY,IAAI,IAAI,CAAC9B,KAAK,CAAC8B,YAAY,CAACC,aAAa,GAC5D,UAAC/D,KAAK,EAAE0D,SAAS,EAAEE,SAAS,EAAK;UAC/B,IAAMI,OAAO,GAAG,CAAC,CAAC;UAClB,SAAAC,EAAA,MAAAC,YAAA,GAAgBlG,MAAM,CAACmG,IAAI,CAAClC,QAAQ,IAAI,CAAC,CAAC,CAAC,EAAAgC,EAAA,GAAAC,YAAA,CAAAvG,MAAA,EAAAsG,EAAA,IAAE;YAAxC,IAAM3F,CAAC,GAAA4F,YAAA,CAAAD,EAAA;YACV,IAAMG,IAAI,GAAGnC,QAAQ,CAAC3D,CAAC,CAAC;YACxB,IAAIsF,SAAS,CAACtF,CAAC,CAAC,KAAK,IAAI,EAAE;cACzB0F,OAAO,CAACI,IAAI,CAAC,GAAGR,SAAS,CAACtF,CAAC,CAAC;YAC9B;UACF;UACA,SAAA+F,GAAA,MAAAC,aAAA,GAAgBtG,MAAM,CAACmG,IAAI,CAAChC,QAAQ,IAAI,CAAC,CAAC,CAAC,EAAAkC,GAAA,GAAAC,aAAA,CAAA3G,MAAA,EAAA0G,GAAA,IAAE;YAAxC,IAAM/F,GAAC,GAAAgG,aAAA,CAAAD,GAAA;YACV,IAAMD,KAAI,GAAGjC,QAAQ,CAAC7D,GAAC,CAAC;YACxB,IAAIoF,SAAS,CAACpF,GAAC,CAAC,KAAK,IAAI,EAAE;cACzB0F,OAAO,CAACI,KAAI,CAAC,GAAGV,SAAS,CAACpF,GAAC,CAAC;YAC9B;UACF;UACA,OAAO,UAAApB,CAAC;YAAA,OACN2E,KAAI,CAACG,KAAK,CAAC8B,YAAY,CAACC,aAAa,CACnC7G,CAAC,EACD8C,KAAK,EACLgE,OAAO,EACPlC,SACF,CAAC;UAAA;QACL,CAAC,GACD,IAAI;QAEV,oBACEjF,MAAA,YAAA0H,aAAA;UAAOC,SAAS,EAAC;QAAU,gBACzB3H,MAAA,YAAA0H,aAAA,gBACGtC,QAAQ,CAACiB,GAAG,CAAC,UAASG,CAAC,EAAEjD,CAAC,EAAE;UAC3B,oBACEvD,MAAA,YAAA0H,aAAA;YAAIpG,GAAG,YAAAkD,MAAA,CAAYjB,CAAC;UAAG,GACpBA,CAAC,KAAK,CAAC,IAAI+B,QAAQ,CAACxE,MAAM,KAAK,CAAC,iBAC/Bd,MAAA,YAAA0H,aAAA;YAAIE,OAAO,EAAEtC,QAAQ,CAACxE,MAAO;YAAC+G,OAAO,EAAEzC,QAAQ,CAACtE;UAAO,CAAE,CAC1D,eACDd,MAAA,YAAA0H,aAAA;YAAIC,SAAS,EAAC;UAAc,GAAEnB,CAAM,CAAC,EACpCd,OAAO,CAACW,GAAG,CAAC,UAASyB,MAAM,EAAErG,CAAC,EAAE;YAC/B,IAAM+B,CAAC,GAAGH,QAAQ,CAACqC,OAAO,EAAEjE,CAAC,EAAE8B,CAAC,CAAC;YACjC,IAAIC,CAAC,KAAK,CAAC,CAAC,EAAE;cACZ,OAAO,IAAI;YACb;YACA,oBACExD,MAAA,YAAA0H,aAAA;cACEC,SAAS,EAAC,aAAa;cACvBrG,GAAG,WAAAkD,MAAA,CAAW/C,CAAC,CAAG;cAClBmG,OAAO,EAAEpE,CAAE;cACXqE,OAAO,EACLtE,CAAC,KAAK6B,QAAQ,CAACtE,MAAM,GAAG,CAAC,IAAIwE,QAAQ,CAACxE,MAAM,KAAK,CAAC,GAC9C,CAAC,GACD;YACL,GAEAgH,MAAM,CAACvE,CAAC,CACP,CAAC;UAET,CAAC,CAAC,EAEDA,CAAC,KAAK,CAAC,iBACNvD,MAAA,YAAA0H,aAAA;YACEC,SAAS,EAAC,eAAe;YACzBE,OAAO,EACLzC,QAAQ,CAACtE,MAAM,IAAIwE,QAAQ,CAACxE,MAAM,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;UACjD,GACF,QAEG,CAEJ,CAAC;QAET,CAAC,CAAC,EAEDwE,QAAQ,CAACxE,MAAM,KAAK,CAAC,iBACpBd,MAAA,YAAA0H,aAAA,aACGpC,QAAQ,CAACe,GAAG,CAAC,UAASzF,CAAC,EAAEa,CAAC,EAAE;UAC3B,oBACEzB,MAAA,YAAA0H,aAAA;YAAIC,SAAS,EAAC,cAAc;YAACrG,GAAG,YAAAkD,MAAA,CAAY/C,CAAC;UAAG,GAC7Cb,CACC,CAAC;QAET,CAAC,CAAC,eACFZ,MAAA,YAAA0H,aAAA;UAAIC,SAAS,EAAC;QAAe,GAC1BvC,QAAQ,CAACtE,MAAM,KAAK,CAAC,GAAG,QAAQ,GAAG,IAClC,CACF,CAED,CAAC,eAERd,MAAA,YAAA0H,aAAA,gBACGlC,OAAO,CAACa,GAAG,CAAC,UAAS0B,MAAM,EAAEtG,CAAC,EAAE;UAC/B,IAAMuG,eAAe,GAAG/C,SAAS,CAACY,aAAa,CAACkC,MAAM,EAAE,EAAE,CAAC;UAC3D,oBACE/H,MAAA,YAAA0H,aAAA;YAAIpG,GAAG,cAAAkD,MAAA,CAAc/C,CAAC;UAAG,GACtBsG,MAAM,CAAC1B,GAAG,CAAC,UAAS4B,GAAG,EAAE1E,CAAC,EAAE;YAC3B,IAAMC,CAAC,GAAGH,QAAQ,CAACmC,OAAO,EAAE/D,CAAC,EAAE8B,CAAC,CAAC;YACjC,IAAIC,CAAC,KAAK,CAAC,CAAC,EAAE;cACZ,OAAO,IAAI;YACb;YACA,oBACExD,MAAA,YAAA0H,aAAA;cACEpG,GAAG,gBAAAkD,MAAA,CAAgB/C,CAAC,OAAA+C,MAAA,CAAIjB,CAAC,CAAG;cAC5BoE,SAAS,EAAC,aAAa;cACvBE,OAAO,EAAErE,CAAE;cACXoE,OAAO,EACLrE,CAAC,KAAK+B,QAAQ,CAACxE,MAAM,GAAG,CAAC,IAAIsE,QAAQ,CAACtE,MAAM,KAAK,CAAC,GAC9C,CAAC,GACD;YACL,GAEAmH,GACC,CAAC;UAET,CAAC,CAAC,EACDvC,OAAO,CAACW,GAAG,CAAC,UAASyB,MAAM,EAAEvE,CAAC,EAAE;YAC/B,IAAM2E,UAAU,GAAGjD,SAAS,CAACY,aAAa,CAACkC,MAAM,EAAED,MAAM,CAAC;YAC1D,oBACE9H,MAAA,YAAA0H,aAAA;cACEC,SAAS,EAAC,QAAQ;cAClBrG,GAAG,WAAAkD,MAAA,CAAW/C,CAAC,OAAA+C,MAAA,CAAIjB,CAAC,CAAG;cACvB4E,OAAO,EACLnB,eAAe,IACfA,eAAe,CAACkB,UAAU,CAAC/E,KAAK,CAAC,CAAC,EAAE4E,MAAM,EAAED,MAAM,CACnD;cACDM,KAAK,EAAEtC,eAAe,CACpBiC,MAAM,EACND,MAAM,EACNI,UAAU,CAAC/E,KAAK,CAAC,CACnB;YAAE,GAED+E,UAAU,CAACG,MAAM,CAACH,UAAU,CAAC/E,KAAK,CAAC,CAAC,CACnC,CAAC;UAET,CAAC,CAAC,eACFnD,MAAA,YAAA0H,aAAA;YACEC,SAAS,EAAC,UAAU;YACpBQ,OAAO,EACLnB,eAAe,IACfA,eAAe,CAACgB,eAAe,CAAC7E,KAAK,CAAC,CAAC,EAAE4E,MAAM,EAAE,CAAC,IAAI,CAAC,CACxD;YACDK,KAAK,EAAEpC,cAAc,CAACgC,eAAe,CAAC7E,KAAK,CAAC,CAAC;UAAE,GAE9C6E,eAAe,CAACK,MAAM,CAACL,eAAe,CAAC7E,KAAK,CAAC,CAAC,CAC7C,CACF,CAAC;QAET,CAAC,CAAC,eAEFnD,MAAA,YAAA0H,aAAA,0BACE1H,MAAA,YAAA0H,aAAA;UACEC,SAAS,EAAC,eAAe;UACzBC,OAAO,EAAEtC,QAAQ,CAACxE,MAAM,IAAIsE,QAAQ,CAACtE,MAAM,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;QAAE,GAC5D,QAEG,CAAC,EAEJ4E,OAAO,CAACW,GAAG,CAAC,UAASyB,MAAM,EAAErG,CAAC,EAAE;UAC/B,IAAMuG,eAAe,GAAG/C,SAAS,CAACY,aAAa,CAAC,EAAE,EAAEiC,MAAM,CAAC;UAC3D,oBACE9H,MAAA,YAAA0H,aAAA;YACEC,SAAS,EAAC,UAAU;YACpBrG,GAAG,UAAAkD,MAAA,CAAU/C,CAAC,CAAG;YACjB0G,OAAO,EACLnB,eAAe,IACfA,eAAe,CAACgB,eAAe,CAAC7E,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE2E,MAAM,CACxD;YACDM,KAAK,EAAErC,cAAc,CAACiC,eAAe,CAAC7E,KAAK,CAAC,CAAC;UAAE,GAE9C6E,eAAe,CAACK,MAAM,CAACL,eAAe,CAAC7E,KAAK,CAAC,CAAC,CAC7C,CAAC;QAET,CAAC,CAAC,eAEFnD,MAAA,YAAA0H,aAAA;UACES,OAAO,EACLnB,eAAe,IACfA,eAAe,CAACpB,oBAAoB,CAACzC,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAC7D;UACDwE,SAAS,EAAC;QAAe,GAExB/B,oBAAoB,CAACyC,MAAM,CAACzC,oBAAoB,CAACzC,KAAK,CAAC,CAAC,CACvD,CACF,CACC,CACF,CAAC;MAEZ;IAAC;EAAA,EA7OyBmF,iBAAK,CAACC,aAAa;EAgP/C1D,aAAa,CAAC2D,YAAY,GAAGtD,oBAAS,CAACsD,YAAY;EACnD3D,aAAa,CAAC4D,SAAS,GAAGvD,oBAAS,CAACuD,SAAS;EAC7C5D,aAAa,CAAC2D,YAAY,CAACrC,wBAAwB,GAAGnC,sBAAsB;EAC5Ea,aAAa,CAAC2D,YAAY,CAACvB,YAAY,GAAG,CAAC,CAAC;EAC5CpC,aAAa,CAAC4D,SAAS,CAACtC,wBAAwB,GAAGuC,qBAAS,CAACC,IAAI;EACjE9D,aAAa,CAAC4D,SAAS,CAACxB,YAAY,GAAGyB,qBAAS,CAACE,MAAM;EACvD,OAAO/D,aAAa;AACtB;AAAC,IAEKgE,iBAAiB,0BAAAC,qBAAA;EAAA,SAAAD,kBAAA;IAAAtI,eAAA,OAAAsI,iBAAA;IAAA,OAAA5G,UAAA,OAAA4G,iBAAA,EAAAlE,SAAA;EAAA;EAAA1B,SAAA,CAAA4F,iBAAA,EAAAC,qBAAA;EAAA,OAAAvH,YAAA,CAAAsH,iBAAA;IAAAvH,GAAA;IAAA6B,KAAA,EACrB,SAAA4B,MAAMA,CAAA,EAAG;MACP,IAAME,SAAS,GAAG,IAAIC,oBAAS,CAAC,IAAI,CAACC,KAAK,CAAC;MAC3C,IAAMK,OAAO,GAAGP,SAAS,CAACQ,UAAU,CAAC,CAAC;MACtC,IAAMC,OAAO,GAAGT,SAAS,CAACU,UAAU,CAAC,CAAC;MACtC,IAAIH,OAAO,CAAC1E,MAAM,KAAK,CAAC,EAAE;QACxB0E,OAAO,CAACiB,IAAI,CAAC,EAAE,CAAC;MAClB;MACA,IAAIf,OAAO,CAAC5E,MAAM,KAAK,CAAC,EAAE;QACxB4E,OAAO,CAACe,IAAI,CAAC,EAAE,CAAC;MAClB;MAEA,IAAMsC,SAAS,GAAG9D,SAAS,CAACE,KAAK,CAACI,IAAI,CAACc,GAAG,CAAC,UAAAzF,CAAC;QAAA,OAAIA,CAAC;MAAA,EAAC;MAClD,IAAI8E,OAAO,CAAC5E,MAAM,KAAK,CAAC,IAAI4E,OAAO,CAAC,CAAC,CAAC,CAAC5E,MAAM,KAAK,CAAC,EAAE;QACnDiI,SAAS,CAACtC,IAAI,CAAC,IAAI,CAACtB,KAAK,CAAC6D,cAAc,CAAC;MAC3C,CAAC,MAAM;QACLtD,OAAO,CAACW,GAAG,CAAC,UAAAG,CAAC;UAAA,OAAIuC,SAAS,CAACtC,IAAI,CAACD,CAAC,CAACyC,IAAI,CAAC,GAAG,CAAC,CAAC;QAAA,EAAC;MAC/C;MAEA,IAAMC,MAAM,GAAG1D,OAAO,CAACa,GAAG,CAAC,UAAAzF,CAAC,EAAI;QAC9B,IAAMuI,GAAG,GAAGvI,CAAC,CAACyF,GAAG,CAAC,UAAA7C,CAAC;UAAA,OAAIA,CAAC;QAAA,EAAC;QACzBkC,OAAO,CAACW,GAAG,CAAC,UAAAG,CAAC,EAAI;UACf,IAAMG,CAAC,GAAG1B,SAAS,CAACY,aAAa,CAACjF,CAAC,EAAE4F,CAAC,CAAC,CAACrD,KAAK,CAAC,CAAC;UAC/CgG,GAAG,CAAC1C,IAAI,CAACE,CAAC,GAAGA,CAAC,GAAG,EAAE,CAAC;QACtB,CAAC,CAAC;QACF,OAAOwC,GAAG;MACZ,CAAC,CAAC;MAEFD,MAAM,CAACE,OAAO,CAACL,SAAS,CAAC;MAEzB,oBACE/I,MAAA,YAAA0H,aAAA;QACEvE,KAAK,EAAE+F,MAAM,CAAC7C,GAAG,CAAC,UAAAzF,CAAC;UAAA,OAAIA,CAAC,CAACqI,IAAI,CAAC,IAAI,CAAC;QAAA,EAAC,CAACA,IAAI,CAAC,IAAI,CAAE;QAChDb,KAAK,EAAE;UAACiB,KAAK,EAAEC,MAAM,CAACC,UAAU,GAAG,CAAC;UAAEC,MAAM,EAAEF,MAAM,CAACG,WAAW,GAAG;QAAC,CAAE;QACtEC,QAAQ,EAAE;MAAK,CAChB,CAAC;IAEN;EAAC;AAAA,EArC6BpB,iBAAK,CAACC,aAAa;AAwCnDM,iBAAiB,CAACL,YAAY,GAAGtD,oBAAS,CAACsD,YAAY;AACvDK,iBAAiB,CAACJ,SAAS,GAAGvD,oBAAS,CAACuD,SAAS;AAAC,IAAAkB,QAAA,GAAAC,OAAA,cAEnC;EACbC,KAAK,EAAEpF,YAAY,CAAC,CAAC;EACrB,eAAe,EAAEA,YAAY,CAAC;IAACwB,WAAW,EAAE;EAAM,CAAC,CAAC;EACpD,mBAAmB,EAAExB,YAAY,CAAC;IAACwB,WAAW,EAAE;EAAK,CAAC,CAAC;EACvD,mBAAmB,EAAExB,YAAY,CAAC;IAACwB,WAAW,EAAE;EAAK,CAAC,CAAC;EACvD,gBAAgB,EAAE4C;AACpB,CAAC","ignoreList":[]}